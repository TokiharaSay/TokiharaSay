<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>解决网络唤醒Wi-Fi问题</title>
    <link href="/2021/04/03/Hackintosh_7/"/>
    <url>/2021/04/03/Hackintosh_7/</url>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>在开启网路唤醒的情况下, macOS在睡眠唤醒后, Wi-Fi变得非常慢, 具体表现为</p></blockquote><ul><li>ping 路由器的延迟高达 50ms~500ms<span id="more"></span><ul><li>ping 路由器的ip地址 -S Wi-Fi的ip地址</li></ul></li><li>Wi-Fi的速度非常慢, 低至 5Mbps<ul><li>局域网另外一台设备开 iperf3 服务, 本地用 <code>iperf3 -c iperf3服务器ip地址 -p 端口 -B Wi-Fi的ip地址</code> 测试</li></ul></li></ul><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><blockquote><p>在开启网络唤醒的情况下, macOS 睡眠后, 需要保持 Wi-Fi 的某种状态, 以便局域网的设备可以通过 Wi-Fi 唤醒 macOS. 但是在 macOS 唤醒后, 这种状态需要切换成 Wi-Fi on 的状态, 这个过程中, 某种未知原因导致 Wi-Fi 延迟和掉速</p></blockquote><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><blockquote><p>根据以上的原因的猜测, 一个很直接的解决思路就是睡眠前关闭 Wi-Fi, 唤醒后, 再打开 Wi-Fi</p></blockquote><blockquote><p>先手动测试一遍, 发现这个思路是可行的. 那么接下来就是如何自动实现</p></blockquote><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul><li><p>关闭 Wi-Fi 的命令 <code> networksetup -setairportpower en1 off</code>, 通常有线网络是 en0, Wi-Fi 是 en1, 查看具体名称, OPT+鼠标点击Wi-Fi图标, 获取到这个<code>网卡名称</code></p></li><li><p>打开 Wi-Fi 的命令 <code> networksetup -setairportpower en1 on</code></p></li><li><p>睡眠和唤醒自动执行脚本的程序, <a href="https://www.bernhard-baehr.de/">SleepWatcher</a></p></li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p>下载 SleepWatcher, <a href="https://www.bernhard-baehr.de/">官网</a>, <a href="sleepwatcher_2.2.1.tar">本文备份</a>, 并解压</p></li><li><p>删除讨厌的安全印记:</p> <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">xattr</span> -d -r com.apple.quarantine ~/Downloads/sleepwatcher_<span class="hljs-number">2</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span>/sleepwatcher<br></code></pre></td></tr></table></figure></li><li><p>复制 SleepWatcher 到可执行目录</p> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp -af ~<span class="hljs-regexp">/Downloads/</span>sleepwatcher_2.<span class="hljs-number">2.1</span><span class="hljs-regexp">/sleepwatcher /u</span>sr<span class="hljs-regexp">/local/</span>sbin/<br></code></pre></td></tr></table></figure></li><li><p>创建 .sleep 和 .wakeup 文件</p> <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">echo</span> &#x27;networksetup -setairportpower en1 off&#x27; &gt; ~<span class="hljs-string">/.sleep</span><br><span class="hljs-keyword">echo</span> &#x27;sleep 5&#x27; &gt; ~<span class="hljs-string">/.wakeup</span><br><span class="hljs-keyword">echo</span> &#x27;networksetup -setairportpower en1 on&#x27; &gt;&gt; ~<span class="hljs-string">/.wakeup</span><br><br>chmod +x ~<span class="hljs-string">/.sleep</span><br>chmod +x ~<span class="hljs-string">/.wakeup</span><br></code></pre></td></tr></table></figure></li><li><p>测试</p> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">- 终端执行下面的命令<br><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sbin/</span>sleepwatcher  -V -s ~<span class="hljs-regexp">/.sleep -w ~/</span>.wakeup<br>- 开启网络唤醒<br>- 将 macOS 睡眠<br>- 唤醒 macOS<br>- 测试 Wi-Fi 的 ping 和 iperf3, 前文所述<br></code></pre></td></tr></table></figure></li><li><p>开机启动</p> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp -af ~<span class="hljs-regexp">/Downloads/</span>sleepwatcher_2.<span class="hljs-number">2.1</span><span class="hljs-regexp">/config/</span>de.bernhard-baehr.sleepwatcher-<span class="hljs-number">20</span>compatibility-localuser.plist ~<span class="hljs-regexp">/Library/</span>LaunchAgents/<br><br>launchctl load -w ~<span class="hljs-regexp">/Library/</span>LaunchAgents/de.bernhard-baehr.sleepwatcher-<span class="hljs-number">20</span>compatibility-localuser.plist<br><br><span class="hljs-comment"># 查看是否运行成功</span><br>ps aux | grep sleepwatcher<br></code></pre></td></tr></table></figure><p>解决办法摘抄自：<br><a href="https://github.com/cattyhouse/oc-guide/blob/master/wifiwake.md">https://github.com/cattyhouse/oc-guide/blob/master/wifiwake.md</a></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一次我的NUC8i5BEH黑苹果完善程度</title>
    <link href="/2021/03/18/Hackintosh_5/"/>
    <url>/2021/03/18/Hackintosh_5/</url>
    
    <content type="html"><![CDATA[<p>运行macOS Intel-NUC8i5BEH</p><span id="more"></span><ul><li>若要引用或转载本EFI，请务必注明出处，所有内容仅供个人使用和学习参考，严禁用于商业用途（tb奸商先死ma）</li></ul><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><ul><li><a href="https://github.com/TokiharaSay/Intel-NUC8i5BEH-Hackintos">Github</a></li><li><a href="https://github.com/TokiharaSay/Intel-NUC8i5BEH-Hackintos/releases">EFI-releases</a></li></ul><table><thead><tr><th align="left">支持macOS版本</th><th>10.14.x-11.x</th></tr></thead><tbody><tr><td align="left">引导加载程序</td><td>OpenCore 0.6.8</td></tr><tr><td align="left">CPU平台</td><td>Coffee Lake（i5-8259U CPU）</td></tr></tbody></table><table><thead><tr><th align="left">系统配置</th><th align="center"></th><th align="center">注意事项</th></tr></thead><tbody><tr><td align="left">CPU</td><td align="center">i5-8259U</td><td align="center">XCPM工作，但不确定CPU调度是否正确</td></tr><tr><td align="left">图形</td><td align="center">Intel Iris Plus Graphics 655</td><td align="center">Type-C支持转接到DP/HDMI 以及HDMI正常</td></tr><tr><td align="left">BIOS</td><td align="center">087</td><td align="center">请看使用说明</td></tr><tr><td align="left">声音</td><td align="center">Realtek ALC235</td><td align="center">板载音频</td></tr><tr><td align="left">磁盘</td><td align="center">KIOXIA RC10 500G</td><td align="center">NVME插槽</td></tr><tr><td align="left">显示器</td><td align="center">3840x2160 15.6’</td><td align="center">TYPE-C支持DP1.2 我使用HDMI</td></tr><tr><td align="left">网卡</td><td align="center">Intel I219V6+BCM94360CS2+板载AC9560</td><td align="center">CS2需要硬改读卡器/不接NVME</td></tr></tbody></table><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li><strong>我是硬改读卡器不能用读卡器了，但是有提供驱动，有需求请编辑config.plist下的Kext-add下找到对应驱动把Enabled改成true/yes</strong></li><li><strong>Type-C的雷电不能用只能当全功能Type-C使用</strong></li><li><strong>默认使用Intel AC9560，使itlwm驱动而非AirportItlwm驱动，配置文件有写驱动路径有需求同读卡器驱动说明一样，（AirportItlwm自带为10.15x的驱动自行更换）</strong></li><li><strong>提供带有intel 蓝牙端口或不带有intel 蓝牙端口的USBPorts，同理读卡器驱动说明一样。</strong></li></ul><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><ul><li><p>BIOS设置</p><ul><li>Devices -&gt; USB -&gt; Port Device Charging Mode: off</li><li>Devices -&gt; USB -&gt; USB Legacy -&gt; Disabled</li><li>Security -&gt; Thunderbolt Security Level: Legacy Mode</li><li>Power -&gt; Wake on LAN from S4/S5: Stay Off</li><li>Boot -&gt; Boot Configuration -&gt; Network Boot: Disable</li><li>Boot -&gt; Secure Boot -&gt; Disable</li></ul></li><li><p>你需要自行生成 SMBIOS 信息（遵循 <a href="https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html">这篇教程</a> 的步骤，使用 <code>Macmini8,1</code>）并填入配置文件中。<br> SMBIOS的SystemUUID，双系统请在Win获取 在命令提示符下输入wmic 再输入csproduct 或 csproduct list full<br> SMBIOS的ROM，请填写网卡MAC地址。</p></li></ul><h3 id="系统相关"><a href="#系统相关" class="headerlink" title="系统相关"></a>系统相关</h3><ul><li>Windows 和 macOS 时间不同步<ul><li>Windows 中打开命令行，输入 Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</li><li>重启到 macOS，联网同步时间，再次进入 Windows 即可正常显示时间</li></ul></li></ul><h3 id="构建EFI方法"><a href="#构建EFI方法" class="headerlink" title="构建EFI方法"></a>构建EFI方法</h3><ul><li>使用以下命令来构建EFI<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/TokiharaSay/Intel-NUC8i5BEH-Hackintos<br><span class="hljs-built_in">cd</span> Intel-NUC8i5BEH-Hackintos<br>chmod +x **/*.sh<br>./build.sh<br></code></pre></td></tr></table></figure>你可以在 <code>Output</code> 目录下找到生成的 EFI。OpenCore 配置文件路径为 <code>Output/EFI/OC/config_sample.plist</code>，你需要自行生成 SMBIOS 信息（遵循 <a href="https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html">这篇教程</a> 的步骤，使用 <code>Macmini8,1</code>）并填入配置文件中，然后将 <code>config_sample.plist</code> 重命名为 <code>config.plist</code>。</li></ul><h3 id="感谢以下朋友的帮助"><a href="#感谢以下朋友的帮助" class="headerlink" title="感谢以下朋友的帮助"></a>感谢以下朋友的帮助</h3><ul><li><p>OpenCore技术交流群 群友们</p></li><li><p><a href="https://github.com/SukkaW">SukkaW</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hackintosh 实用教程与命令</title>
    <link href="/2021/03/18/Hackintosh_4/"/>
    <url>/2021/03/18/Hackintosh_4/</url>
    
    <content type="html"><![CDATA[<h3 id="教程链接"><a href="#教程链接" class="headerlink" title="教程链接"></a>教程链接</h3><p>英语配置教程<br><a href="https://dortania.github.io/OpenCore-Install-Guide/">https://dortania.github.io/OpenCore-Install-Guide/</a></p><span id="more"></span><p>OC文档翻译<br><a href="https://oc.skk.moe/">https://oc.skk.moe/</a><br>OC文档翻译<br><a href="https://blog.xjn819.com/post/opencore-guide.html">https://blog.xjn819.com/post/opencore-guide.html</a><br>OC ACPI 部件库<br><a href="https://ocbook.tlhub.cn/">https://ocbook.tlhub.cn/</a><br><a href="https://github.com/daliansky/OC-little">部件库文件</a><br>Mac/Win QtOpenCoreConfig 编辑工具<br><a href="https://github.com/ic005k/QtOpenCoreConfig">https://github.com/ic005k/QtOpenCoreConfig</a><br>Mac/Win plist编辑工具<br><a href="https://github.com/ic005k/PlistEDPlus">https://github.com/ic005k/PlistEDPlus</a><br>I2C触摸板<br><a href="https://blog.gzxiaobai.cn/">https://blog.gzxiaobai.cn/</a><br>电池<br><a href="https://blog.gzxiaobai.cn/">https://blog.gzxiaobai.cn/</a></p><h3 id="BIOS-推介设定"><a href="#BIOS-推介设定" class="headerlink" title="BIOS 推介设定"></a>BIOS 推介设定</h3><p>禁用</p><ul><li>FastBoot~快速启动</li><li>VT-d(can be enabled if you set DisableIoMapper to YES)<br>VT-d(如果DisableIOMapperQuick设置为YES,则可以启用)</li><li>CSM~CSM兼容性支持模块</li><li>Thunderbolt~雷雳</li><li>Intel SGX ~英特尔SGX</li><li>Intel Platform Trust ~英特尔平台信任</li><li>CFG Lock(MSR 0xE2 write protection) ~ CFG锁(MSR 0xE2写保护)<br>(必须关闭， 如果找不到该选项，则在OpenCore的config-内核-&gt; Quirks 下启用与CFG Lock相关选项)</li><li>Secure Boot ~安全启动</li><li>Parallel Port ~并口</li><li>Serial/COM Port ~串行/COM端口</li></ul><p>启用</p><ul><li>VT-x~VT-x</li><li>UEFI启动模式。请不要使用Legacy</li><li>硬盘模式改AHCI。不能用IDE和RST RAID</li><li>Above 4G decoding ~大于4G地址空间解码</li><li>Hyper-Threading ~超线程</li><li>xecute Disable Bit ~执行禁用位</li><li>EHCI/XHCI Hand-off ~ EHCI / XHCI接手控制</li><li>OS type: Windows 8.1/10 UEFI Mode ~操作系统类型: Windows 8.1 1 10 UEFI模式</li><li>DVMT Pre-Allocated(iGPU Memory): DVMT预分配(iGPU内存) : 64MB</li><li>Legacy RTC Device ~传统RTC设备</li></ul><h3 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h3><p>终端</p><ul><li><p>log show –last 1d | grep “AppleACPIPlatformPower” 查看睡眠唤醒日志</p></li><li><p>sudo spctl –-master-disable 允许任何未知来源 (master前面是两个-,MD渲染的博客只显一个)</p></li></ul><p>系统路径</p><ul><li>/System/Library/Extensions</li><li>/Library/Extensions</li></ul><p>重建缓存</p><ul><li>sudo kextcache -i /</li><li>sudo kextcache -u /</li><li>sudo kextcache -system-caches</li></ul><h3 id="Boot-Args"><a href="#Boot-Args" class="headerlink" title="Boot-Args"></a><a href="#Boot-Args" title="Boot-Args"></a>Boot-Args</h3><ul><li>agdpmod=vit9696 HDMI 开机黑屏</li><li>igfxonln=1 HDMI 唤醒黑屏</li><li>agdpmod=pikera 5000系列的AMD显卡使用（不加引导完成之后可能黑屏）</li><li>-wegnoegpu 软屏蔽独立显卡不会断电</li><li>keepsyms=1 推介与debug=0x100一起使用 可以打印更加详细的KP</li><li>debug=0x100 推介与keepsyms=1一起使用 可以打印更加详细的KP</li></ul><h3 id="不识别SATA盘"><a href="#不识别SATA盘" class="headerlink" title="不识别SATA盘"></a><a href="#%E4%B8%8D%E8%AF%86%E5%88%ABSATA%E7%9B%98" title="不识别SATA盘"></a>不识别SATA盘</h3><ul><li>BigSur不识别添加 CtlnaAHCIPort 驱动（如果是OC 同时请在config.plist里面的Kext-add下面添加该驱动列表）</li><li>Catalina及以下不识别SATA盘添加SATA-100-series-unsupported SATA-200-series-unsupported SATA-300-series-unsupported<br>三个驱动（如果是OC 同时请在config.plist里面的Kext-add下面添加该驱动列表）</li></ul><h3 id="OC选项"><a href="#OC选项" class="headerlink" title="OC选项"></a><a href="#OC%E9%80%89%E9%A1%B9" title="OC选项"></a>OC选项</h3><p>查看当前OC版本 终端输入</p><ul><li>nvram 4D1FDA02-38C7-4A6A-9CC6-4BCCA8B30102:opencore-version</li></ul><p>让Win不使用Mac的SMBIOS</p><ul><li>CustomSMBIOSGuid 改成 true （其实是打勾或者选Yes）</li><li>UpdateSMBIOSMode 填写 Custom</li></ul><p>打开保险箱</p><ul><li>AppleImageConversion 改成 true （其实是打勾或者选Yes）</li><li>FirmwareVolume 改成 true （其实是打勾或者选Yes）</li><li>HashServices 改成 true （其实是打勾或者选Yes）</li><li>AppleSmcIo 改成 true （其实是打勾或者选Yes）</li></ul><p>Big Sur 以下加载AirportItlwm 英特尔Wi-Fi驱动<br>方法一 (可能进不去Rec 模式)</p><ul><li>DmgLoading 设置为 Signed</li><li>SecureBootModel 设置为 Default</li></ul><p>方法二</p><ul><li>Kernel-Force-Item 1</li><li>BundlePath 填 System/Library/Extensions/IO80211Family.kext</li><li>Enabled 改成 true （其实是打勾或者选Yes）</li><li>ExecutablePath 填 Contents/MacOS/IO80211Family</li><li>MaxKernel 为空</li><li>MinKernel 为空</li><li>Identifier 填 com.apple.iokit.IO80211Family</li></ul><p>核显改为4095MB</p><ul><li>DeviceProperties-Add</li><li>PciRoot(0x0)/Pci(0x2,0x0)下添加</li><li>framebuffer-unifiedmem data 0000F0FF</li></ul>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Facetime与iMessage解决方法</title>
    <link href="/2021/03/13/Hackintosh_3/"/>
    <url>/2021/03/13/Hackintosh_3/</url>
    
    <content type="html"><![CDATA[<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>其实最开始我在 2020年4月15在酷安写过这篇文章，但是我发现有一些人是登陆提示是未知错误的，</p><span id="more"></span><p>而不是提示顾客代码，这次我为大家写个更详细的解决方法我不保证所有人都可以使用。<br>所需工具/链接我会在文章最后放出所有的下载链接<br>然后本文只供参考学习使用，不负任何责任。</p><h3 id="特殊情况"><a href="#特殊情况" class="headerlink" title="特殊情况"></a>特殊情况</h3><p>未知错误/闪退过于玄学 请尝试直接更换苹果账户不确定可行<br>或者找苹果解除风控</p><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p>首先请退出你所有的苹果账户然后确认你的引导是Clover还是OpenCore<br>打开<a href="https://github.com/headkaze/Hackintool">Hackintool</a><br>点击引导<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_1.png"><br>可以看见你的引导类型，我这里为OpenCore<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_2.png"><br>接下来我会分开说明的请左下选择按钮选择你应阅读的章节</p><h3 id="未知错误-顾客代码"><a href="#未知错误-顾客代码" class="headerlink" title="未知错误/顾客代码"></a>未知错误/顾客代码</h3><p>顾客代码则直接按照你引导选择章节过去阅读<br>如果是出错/未知错误的则继续看下去，目的是为了让你登陆时变成顾客代码<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_error1.jpg"><br>如果是英特尔Wi-Fi之类请先添加该驱动<a href="https://github.com/RehabMan/OS-X-Null-Ethernet">Null-Ethernet</a></p><p>然后打开终端输入命令<br>sudo rm -rf ~/Library/Preferences/SystemConfiguration/com.apple.network*<br>sudo rm -rf ~/Library/Preferences/SystemConfiguration/preferences*<br>sudo rm -rf ~/Library/Caches/com.apple.iCloudHelper*<br>sudo rm -rf ~/Library/Caches/com.apple.Messages*<br>sudo rm -rf ~/Library/Caches/com.apple.imfoundation.IMRemoteURLConnectionAgent*<br>sudo rm -rf ~/Library/Preferences/com.apple.iChat*<br>sudo rm -rf ~/Library/Preferences/com.apple.icloud*<br>sudo rm -rf ~/Library/Preferences/com.apple.imagent*<br>sudo rm -rf ~/Library/Preferences/com.apple.imessage*<br>sudo rm -rf ~/Library/Preferences/com.apple.imservice*<br>sudo rm -rf ~/Library/Preferences/com.apple.ids.service*<br>sudo rm -rf ~/Library/Preferences/com.apple.madrid.plist*<br>sudo rm -rf ~/Library/Preferences/com.apple.imessage.bag.plist*<br>sudo rm -rf ~/Library/Preferences/com.apple.identityserviced*<br>sudo rm -rf ~/Library/Preferences/com.apple.ids.service*<br>sudo rm -rf ~/Library/Preferences/com.apple.security*<br>sudo rm -rf ~/Library/Messages<br>然后到系统设置偏好-网络 删除所有设备 并重启然后按照你引导选择章节过去阅读<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_error2.png"></p><h3 id="OpenCore"><a href="#OpenCore" class="headerlink" title="OpenCore"></a>OpenCore</h3><p>首先在使用<a href="https://github.com/ic005k/PlistEDPlus">PlistEDPlus</a>打开你的Conifg.plist<br>然后打开<a href="https://github.com/headkaze/Hackintool">Hackintool</a><br>选择PCIE找到你的网卡并右键选择Copy Device Path<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_OpenCore_1.png"><br>然后回到<a href="https://github.com/ic005k/PlistEDPlus">PlistEDPlus</a> 你的Conifg.plist<br>DeviceProperties-Add下添加你的网卡地址，子项添加 built-in 数据类型为DATA类型 值为01<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_OpenCore_2.png"><br>然后打开<a href="https://github.com/corpnewt/GenSMBIOS">GenSMBIOS</a> 或者 <a href="https://mackie100projects.altervista.org/download-clover-configurator/">Clover Configurator</a> 刷ROM MLB 序列号 SystemUUID ROM在变量设置里生成即可 序列号需要在<a href="https://checkcoverage.apple.com/">苹果官方</a> 查得到设备，太老了就拿新款机器去刷 刷到之后 填写到Conifg.plist的机型里<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_OpenCore_3.png"><br>当然UUID最好获取Win的 Win获取 在命令提示符下输入wmic 再输入csproduct 或 csproduct list full<br>重启选择清理nvram 然后跳转开始解决</p><h3 id="Clover"><a href="#Clover" class="headerlink" title="Clover"></a>Clover</h3><p>Clover直接用 <a href="https://mackie100projects.altervista.org/download-clover-configurator/">Clover Configurator</a> 打开你的Conifg.plist然后打开选择PCIE找到你的网卡并右键选择Copy Device Path<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_OpenCore_1.png"><br>设备设置-属性左下框点+粘贴Device地址 右下框点+ 添加 built-in 数据类型为DATA类型 值为01<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_Clover_1.png.png"><br>然后机型设置 刷ROM MLB 序列号 SystemUUID ROM在变量设置里生成即可 序列号需要在<a href="https://checkcoverage.apple.com/">苹果官方</a> 查得到设备，太老了就拿新款机器去刷 刷到之后保存，重启在Clover界面按F11<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_OpenCore_3.png"></p><h3 id="开始解决"><a href="#开始解决" class="headerlink" title="开始解决"></a>开始解决</h3><p>如果按上面操作依然是未知错误的请尝试直接更换苹果账户/放弃<br>一般来说做好上面的操作之后登陆会提示为顾客代码<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_END_1.png"><br>这时应该直接打苹果官方电话寻求解决么，跟客服说你的Facetime与iMessage无法使用，不要暴露你说黑果，前面刷的刷有效序列号，是顾客代码 所以不要怕第一次电话没解决就第二次 实测可行</p><p>Hackintool <a href="https://github.com/headkaze/Hackintool">https://github.com/headkaze/Hackintool</a><br>Clover Configurator <a href="https://mackie100projects.altervista.org/download-clover-configurator/">https://mackie100projects.altervista.org/download-clover-configurator/</a><br>PlistEDPlus <a href="https://github.com/ic005k/PlistEDPlus">https://github.com/ic005k/PlistEDPlus</a><br>Null-Ethernet <a href="https://github.com/RehabMan/OS-X-Null-Ethernet">https://github.com/RehabMan/OS-X-Null-Ethernet</a></p>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微星 B360M迫击炮 黑苹果 OpenCore 引导配置</title>
    <link href="/2021/03/01/Hackintosh_2/"/>
    <url>/2021/03/01/Hackintosh_2/</url>
    
    <content type="html"><![CDATA[<div align="center"><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Hackintosh/MSI-B360M-MORTAR-Hackintosh.jpg" width="350px"></div><h1 align="center">MSI-B360M-MORTAR-Hackintosh</h1><h3 align="center">微星 B360M迫击炮 黑苹果 OpenCore 引导配置</h3><br><h2 id="Disclaimer-免责声明"><a href="#Disclaimer-免责声明" class="headerlink" title="Disclaimer / 免责声明"></a>Disclaimer / 免责声明</h2><p>Your warranty is now void. Please do some research if you have any concerns before utilizing my project. I am not responsible for any loss, including but not limited to Kernel Panic, device fail to boot or can not function normally, storage damage or data loss, atomic bombing, World War III, The CK-Class Restructuring Scenario that SCP Foundation can not prevent, and so on.</p><p>你的保修将完全失效。如果您有任何疑虑，请在使用我的项目之前先进行一些研究。我对任何损失均不负责，包括但不限于 Kernel Panic、设备无法启动或无法正常工作、硬件损坏或数据丢失、原子弹爆炸、第三次世界大战、SCP 基金会无法避免的 CK 级现实重构等。</p><p>Please choose the branch you need for different graphics cards</p><p>不同显卡请选择你需要的分支</p><h2 id="Hardware-Specifications-硬件配置"><a href="#Hardware-Specifications-硬件配置" class="headerlink" title="Hardware Specifications / 硬件配置"></a>Hardware Specifications / 硬件配置</h2><table><thead><tr><th align="left">Specifications</th><th align="left">Details</th></tr></thead><tbody><tr><td align="left">Computer Model</td><td align="left">MSI-B360M-MORTAR</td></tr><tr><td align="left">CPU</td><td align="left">Intel Core i5-8400</td></tr><tr><td align="left">Memory</td><td align="left">DDR4 2666 Mhz. 8 GB</td></tr><tr><td align="left">NVMe SSD</td><td align="left">SAMSUNG 970 EVO 250G</td></tr><tr><td align="left">Integrated Graphics</td><td align="left">Intel UHD Graphics 630</td></tr><tr><td align="left">Wireless Card</td><td align="left">Manually  to PCIE Card BCM943602CDP</td></tr></tbody></table><h2 id="Working-amp-Not-Working-可用与不可用的功能"><a href="#Working-amp-Not-Working-可用与不可用的功能" class="headerlink" title="Working &amp; Not Working / 可用与不可用的功能"></a>Working &amp; Not Working / 可用与不可用的功能</h2><h3 id="Non-Fuctional-不工作"><a href="#Non-Fuctional-不工作" class="headerlink" title="Non-Fuctional / 不工作"></a>Non-Fuctional / 不工作</h3><table><thead><tr><th>Feature</th><th>Status</th><th>Dependency</th><th>Remarks</th></tr></thead><tbody><tr><td>Non-Fuctional<br>没有不工作</td><td>✅</td><td></td><td>Completely normal<br>完全正常</td></tr></tbody></table><h3 id="Video-and-Audio-音频与视频"><a href="#Video-and-Audio-音频与视频" class="headerlink" title="Video and Audio / 音频与视频"></a>Video and Audio / 音频与视频</h3><table><thead><tr><th>Feature</th><th>Status</th><th>Dependency</th><th>Remarks</th></tr></thead><tbody><tr><td>Full Graphics Accleration (QE/CI)<br>图形硬件加速</td><td>✅</td><td><code>WhateverGreen.kext</code></td><td></td></tr><tr><td>Audio Recording via 3.5mm microphone<br>通过3.5mm 麦克风录音</td><td>✅</td><td><code>AppleALC.kext</code></td><td></td></tr><tr><td>Audio Playback after through 3.5mm<br>通过 后 3.5mm 接口播放音频</td><td>✅</td><td><code>AppleALC.kext</code></td><td></td></tr><tr><td>Automatic Headphone Output Switching<br>当插入耳机时自动切换音频输出</td><td>✅</td><td><code>AppleALC.kext</code></td><td></td></tr></tbody></table><h3 id="Power-Charge-Sleep-and-Hibernation-电源管理、充电、睡眠、休眠"><a href="#Power-Charge-Sleep-and-Hibernation-电源管理、充电、睡眠、休眠" class="headerlink" title="Power, Charge, Sleep and Hibernation / 电源管理、充电、睡眠、休眠"></a>Power, Charge, Sleep and Hibernation / 电源管理、充电、睡眠、休眠</h3><table><thead><tr><th>Feature</th><th>Status</th><th>Dependency</th><th>Remarks</th></tr></thead><tbody><tr><td>CPU Power Management (SpeedShift)<br>CPU 电源管理</td><td>✅</td><td><code>SSDT-PLUG</code></td><td>Use <code>Macmini8,1</code> for beter power management<br>使用 <code>Macmini8,1</code> 机型以获得更好的电源管理</td></tr><tr><td>NVMe Drive Battery Management<br>NVMe 硬盘电源管理</td><td>✅</td><td><code>NVMeFix.kext</code></td><td></td></tr><tr><td>S3 Sleep / Hibernation Mode 3<br>S3 睡眠 / Mode 3 休眠</td><td>✅</td><td></td><td></td></tr></tbody></table><h3 id="Input-amp-Output"><a href="#Input-amp-Output" class="headerlink" title="Input &amp; Output"></a>Input &amp; Output</h3><table><thead><tr><th>Feature</th><th>Status</th><th>Dependency</th><th>Remarks</th></tr></thead><tbody><tr><td>WiFi</td><td>✅</td><td><code>AirportFixup.kext</code></td><td>Suggest to switch Broadcom based card<br>推荐更换博通无线网卡</td></tr><tr><td>USB 2.0, USB 3.0</td><td>✅</td><td><code>USBPorts.kext</code></td><td></td></tr></tbody></table><h3 id="Display-TrackPad-and-Keyboard-显示器、触摸板和键盘"><a href="#Display-TrackPad-and-Keyboard-显示器、触摸板和键盘" class="headerlink" title="Display, TrackPad and Keyboard / 显示器、触摸板和键盘"></a>Display, TrackPad and Keyboard / 显示器、触摸板和键盘</h3><table><thead><tr><th>Feature</th><th>Status</th><th>Dependency</th><th>Remarks</th></tr></thead><tbody><tr><td>HiDPI</td><td>✅</td><td></td><td>Natively enabled on UHD DP  screen external<br>在 UHD DP 4K 外接屏幕上原生启用</td></tr></tbody></table><h2 id="Refrence-必读参考资料"><a href="#Refrence-必读参考资料" class="headerlink" title="Refrence / 必读参考资料"></a>Refrence / 必读参考资料</h2><ul><li><a href="https://dortania.github.io/OpenCore-Install-Guide/">dortania’s OpenCore Install Guide</a></li><li><a href="https://dortania.github.io/OpenCore-Post-Install/">dortania’s OpenCore Post Install Guide</a></li><li><a href="https://dortania.github.io/OpenCore-Post-Install/">dortania Getting Started with ACPI</a></li><li><a href="https://github.com/dortania/OpenCore-Multiboot">dortania opencore multiboot</a></li><li><a href="https://github.com/acidanthera/WhateverGreen/blob/master/Manual/FAQ.IntelHD.en.md">WhateverGreen Intel HD Manual</a></li><li><code>Configuration.pdf</code> and <code>Differences.pdf</code> in each OpenCore releases.</li><li><a href="https://github.com/daliansky/OC-little">daliansky/OC-little</a></li><li><a href="https://oc.skk.moe/">OpenCore 简体中文参考手册 (非官方)</a></li></ul><p><strong>No seriously, PLEASE read those.</strong></p><p><strong>务必阅读上述参考资料</strong></p><h2 id="Requirement-需求和依赖"><a href="#Requirement-需求和依赖" class="headerlink" title="Requirement / 需求和依赖"></a>Requirement / 需求和依赖</h2><h3 id="Basic-基本需求"><a href="#Basic-基本需求" class="headerlink" title="Basic / 基本需求"></a>Basic / 基本需求</h3><ul><li>A macOS machine (optional): to create the macOS installer and build the EFI.<br>一台已经安装好 macOS 的机器，用于制作 macOS 安装器和编译本项目</li><li>Flash drive, 12GB or more, for the above purpose.<br>一个容量大于等于 12 GiB 的 U 盘</li><li><a href="https://github.com/ic005k/PlistEDPlus">PlistEDPlus</a> to edit plist files on Windows.<br>编辑 plist 文件的工具 <a href="https://github.com/ic005k/PlistEDPlus">PlistEDPlus</a></li><li><a href="https://github.com/acidanthera/MaciASL">MaciASL</a> for patching ACPI tables and editing ACPI patches.<br>用于修补和编辑 ACPI 的工具 <a href="https://github.com/acidanthera/MaciASL">MaciASL</a></li><li><a href="https://github.com/corpnewt/MountEFI">MountEFI</a> to quickly mount EFI partitions under macOS.<br>在 macOS 下挂载 EFI 分区的工具 <a href="https://github.com/corpnewt/MountEFI">MountEFI</a></li><li><a href="https://developer.apple.com/downloads">IORegistryExplorer</a> for diagnosis.<br>用于诊断的 <a href="https://developer.apple.com/downloads">IORegistryExplorer</a></li><li><a href="https://github.com/headkaze/Hackintool">HackinTool</a> for diagnosis ONLY. Most of the built-in patches are outdated.</li></ul><p><strong>仅用于</strong> 诊断的 <a href="https://github.com/headkaze/Hackintool">HackinTool</a>，大部分内置的补丁和工具已经过时、不再适用</p><ul><li>Patience and time, especially if this is your first time Hackintosh-ing.<br>耐心和时间。如果你是第一次进行黑苹果，这尤为重要</li></ul><h3 id="Hardware-Modification-硬件修改"><a href="#Hardware-Modification-硬件修改" class="headerlink" title="Hardware Modification / 硬件修改"></a>Hardware Modification / 硬件修改</h3><h4 id="SSD"><a href="#SSD" class="headerlink" title="SSD"></a>SSD</h4><p>Samusung PM981 is not supported AT ALL. Make sure to switch at least one SSD.</p><p>三星 PM981 <strong>完全</strong> 无法使用，务必更换至少一块 SSD 硬盘。</p><h4 id="Wireless-Card-无线网卡"><a href="#Wireless-Card-无线网卡" class="headerlink" title="Wireless Card / 无线网卡"></a>Wireless Card / 无线网卡</h4><p>it is recommended to use Broadcom wireless network card for the best experience (better, refer to the use of the best experience).</p><p>建议使用博通无线网卡以获得 <strong>更好</strong> 的体验（更好，指使用 <strong>体验</strong>）。</p><h3 id="Update-or-Downgrade-BIOS-Version-升级或降级-BIOS"><a href="#Update-or-Downgrade-BIOS-Version-升级或降级-BIOS" class="headerlink" title="Update or Downgrade BIOS Version / 升级或降级 BIOS"></a>Update or Downgrade BIOS Version / 升级或降级 BIOS</h3><p>It is recommended to use a specific version of the BIOS for the best use experience. The most recommended BIOS version is E7B23IMS.1B0</p><p>推荐使用特定版本的 BIOS 以获得最佳的使用体验。最推荐 BIOS 版本是 E7B23IMS.1B0</p><p><a href="https://www.msi.com/Motherboard/support/B360M-MORTAR">Download BIOS at MSI Support Website. 从微星支持网站下载 BIOS。</a></p><h3 id="BIOS-Settings-修改-BIOS-设置"><a href="#BIOS-Settings-修改-BIOS-设置" class="headerlink" title="BIOS Settings / 修改 BIOS 设置"></a>BIOS Settings / 修改 BIOS 设置</h3><ul><li>Settings &gt; Advanced &gt; integrated graphics card multi display: allow</li><li>Settings &gt; Advanced &gt; ERP ready: allow</li><li>Settings &gt; Advanced &gt; Windows operating system configuration &gt; secure boot &gt; MSI quick boot: off</li><li>Settings &gt; Advanced &gt; Windows operating system configuration &gt; secure boot &gt; fast boot: off</li><li>Settings &gt; Advanced &gt; Windows operating system configuration &gt; secure boot &gt; secure boot: off</li><li>Settings &gt; Advanced &gt; wake up event Settings &gt; USB device wake up from S3 / S4 / S5: allow</li><li>OC &gt; CPU features &gt; CFG lock: Disable</li></ul><h2 id="Other-Information-其它信息"><a href="#Other-Information-其它信息" class="headerlink" title="Other Information / 其它信息"></a>Other Information / 其它信息</h2><h3 id="How-to-build-EFI-如何编译本-EFI"><a href="#How-to-build-EFI-如何编译本-EFI" class="headerlink" title="How to build EFI / 如何编译本 EFI"></a>How to build EFI / 如何编译本 EFI</h3><p>There is no prebuilt version of EFI avaliable YET, and it is only able to build under macOS. Use a virtual machine or <a href="https://github.com/mxschmitt/action-tmate">action-tmate</a> if you have to.</p><p>本 EFI <strong>暂时不提供</strong> 预编译版本，并且编译必须在 macOS 下进行。如有必要，请使用虚拟机、或通过 <a href="https://github.com/mxschmitt/action-tmate">action-tmate</a> 将 GitHub Action 作为 macOS VPS 使用。</p><p>Use following command to build the EFI.</p><p>使用下述指令编译 EFI：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git https://github.com/TokiharaSay/OpenCore-MSI-B360M-MORTAR-Hackintosh<br><span class="hljs-built_in">cd</span> OpenCore-MSI-B360M-MORTAR-Hackintosh<br>chmod +x **/*.sh<br>./build.sh<br></code></pre></td></tr></table></figure><p>Find generated EFI under <code>Output</code> folder. Find OpenCore config at <code>Output/EFI/OC/config_sample.plist</code> and fill in your own SMBIOS (Follow <a href="https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html">the guide</a>, use model <code>MacBookPro14,3</code>) then rename <code>config_sample.plist</code> to <code>config.plist</code>.</p><p>你可以在 <code>Output</code> 目录下找到生成的 EFI。OpenCore 配置文件路径为 <code>Output/EFI/OC/config_sample.plist</code>，你需要自行生成 SMBIOS 信息（遵循 <a href="https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html">这篇教程</a> 的步骤，使用机型 <code>Macmini8,1</code>）并填入配置文件中，然后将 <code>config_sample.plist</code> 重命名为 <code>config.plist</code>。</p><hr><p>Use following command to update and rebuild the EFI from upstream.</p><p>使用下述指令从上游更新和重新编译 EFI：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> OpenCore-MSI-B360M-MORTAR-Hackintosh<br>git pull --rebase<br>chmod +x **/*.sh<br>./build.sh<br></code></pre></td></tr></table></figure><p>Everytime you rebuilt the EFI you have to fill in the SMBIOS again. So keep your SMBIOS info saved in a safe place!</p><p>每次重新编译 EFI 后你都需要重新填入一次 SMBIOS 信息，所以务必将你的 SMBIOS 信息保存在一个安全的位置！</p><h3 id="Directories-Structure-项目目录结构"><a href="#Directories-Structure-项目目录结构" class="headerlink" title="Directories Structure / 项目目录结构"></a>Directories Structure / 项目目录结构</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">.<br>├── ACPI<br>│   ├── OEM_DSDT <span class="hljs-comment"># The original DSDT dissembled from OEM BIOS</span><br>│   └── SSDT<br>│       ├── DSL <span class="hljs-comment"># SSDT source dsl files</span><br>│       └── <span class="hljs-keyword">build_acpi.sh </span><span class="hljs-comment"># dsl files build script</span><br>├── <span class="hljs-built_in">Config</span><br>│   └── config_sample.plist <span class="hljs-comment"># Sample config.plist</span><br>├── Kexts<br>│   ├── Local <span class="hljs-comment"># Kexts files where there is no way to be downloaded</span><br>│   │   ├── ThunderboltReset.kext<br>│   │   ├── USBMap.kext<br>│   │   └── XHCI-unsupported.kext<br>│   └── download_kexts.<span class="hljs-keyword">sh </span><span class="hljs-comment"># Use the script to download the rest of the kexts</span><br>├── LICENSE<br>├── OpenCore<br>│   ├── OldSample.plist <span class="hljs-comment"># The curent version of OpenCore sample. Used to diff the configuration when update OpenCore to a newer version </span><br>│   └── oc.<span class="hljs-keyword">sh </span><span class="hljs-comment"># Script uesd to download OpenCorePkg and construct EFI folder</span><br>├── README.md <span class="hljs-comment"># The file you are currently reading</span><br>└── <span class="hljs-keyword">build.sh </span><span class="hljs-comment"># Overall build script, will call all the scripts mentioned above.</span><br></code></pre></td></tr></table></figure><h2 id="Donation-捐赠"><a href="#Donation-捐赠" class="headerlink" title="Donation / 捐赠"></a>Donation / 捐赠</h2><p>Donating to this project is OPTIONAL. But feel free to buy me a coffee if you appreciate my works.</p><p>捐赠本项目 <strong>并不是必需的</strong>。但是如果我的项目对你有所帮助，为什么不考虑一下给我买杯咖啡呢？</p><h2 id="Maintainer-维护者"><a href="#Maintainer-维护者" class="headerlink" title="Maintainer / 维护者"></a>Maintainer / 维护者</h2><p><strong>OMEN-by-HP-3 Hackintosh</strong> © <a href="https://github.com/TokiharaSay">TokiharaSay</a>, Released under the <a href="./LICENSE">GPL-3.0</a> License.<br><br>Authored and maintained by TokiharaSaywith help from contributors (<a href="https://github.com/TokiharaSay/OpenCore-MSI-B360M-MORTAR-Hackintosh/graphs/contributors">list</a>).</p><blockquote><p><a href="https://www.runebalot.cn/">Blog</a> · GitHub <a href="https://github.com/TokiharaSay">@TokiharaSay</a> · Telegram Channel <a href="https://t.me/TokiharaSay">@TokiharaSayChannel</a> · Twitter <a href="https://twitter.com/TokiharaSay">@TokiharaSay</a> </p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OMEN-by-HP-3 黑苹果 OpenCore 引导配置</title>
    <link href="/2021/03/01/Hackintosh_1/"/>
    <url>/2021/03/01/Hackintosh_1/</url>
    
    <content type="html"><![CDATA[<div align="center"><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Hackintosh/OMEN-by-HP-3%20Hackintosh.png" width="350px"></div><h1 align="center">OMEN-by-HP-3 Hackintosh</h1><h3 align="center">OMEN-by-HP-3 黑苹果 OpenCore 引导配置</h3><br><h2 id="Disclaimer-免责声明"><a href="#Disclaimer-免责声明" class="headerlink" title="Disclaimer / 免责声明"></a>Disclaimer / 免责声明</h2><p>Your warranty is now void. Please do some research if you have any concerns before utilizing my project. I am not responsible for any loss, including but not limited to Kernel Panic, device fail to boot or can not function normally, storage damage or data loss, atomic bombing, World War III, The CK-Class Restructuring Scenario that SCP Foundation can not prevent, and so on.</p><p>你的保修将完全失效。如果您有任何疑虑，请在使用我的项目之前先进行一些研究。我对任何损失均不负责，包括但不限于 Kernel Panic、设备无法启动或无法正常工作、硬件损坏或数据丢失、原子弹爆炸、第三次世界大战、SCP 基金会无法避免的 CK 级现实重构等。</p><h2 id="Hardware-Specifications-硬件配置"><a href="#Hardware-Specifications-硬件配置" class="headerlink" title="Hardware Specifications / 硬件配置"></a>Hardware Specifications / 硬件配置</h2><table><thead><tr><th align="left">Specifications</th><th align="left">Details</th></tr></thead><tbody><tr><td align="left">Computer Model</td><td align="left">OMEN by HP - 15-ce007tx</td></tr><tr><td align="left">CPU</td><td align="left">Intel Core i5-7300HQ</td></tr><tr><td align="left">Memory</td><td align="left">DDR4 2666 Mhz. 2x8 GB</td></tr><tr><td align="left">NVMe SSD</td><td align="left">SKintech 128G M.2 SATA+ HGST 1024GiB</td></tr><tr><td align="left">Integrated Graphics</td><td align="left">Intel HD Graphics 630</td></tr><tr><td align="left">Wireless Card</td><td align="left">Manually change to BCM94360CS2</td></tr></tbody></table><h2 id="Working-amp-Not-Working-可用与不可用的功能"><a href="#Working-amp-Not-Working-可用与不可用的功能" class="headerlink" title="Working &amp; Not Working / 可用与不可用的功能"></a>Working &amp; Not Working / 可用与不可用的功能</h2><h3 id="Non-Fuctional-不工作"><a href="#Non-Fuctional-不工作" class="headerlink" title="Non-Fuctional / 不工作"></a>Non-Fuctional / 不工作</h3><table><thead><tr><th>Feature</th><th>Status</th><th>Dependency</th><th>Remarks</th></tr></thead><tbody><tr><td>External Video Card<br>独立显卡</td><td>❌</td><td>Disabled using both SSDT<br>已通过 SSDT禁用</td><td>NVIDIA Optimus is not supported in Hackintosh<br>黑苹果不支持 NVIDIA 显卡切换技术</td></tr></tbody></table><h3 id="Video-and-Audio-音频与视频"><a href="#Video-and-Audio-音频与视频" class="headerlink" title="Video and Audio / 音频与视频"></a>Video and Audio / 音频与视频</h3><table><thead><tr><th>Feature</th><th>Status</th><th>Dependency</th><th>Remarks</th></tr></thead><tbody><tr><td>Full Graphics Accleration (QE/CI)<br>图形硬件加速</td><td>✅</td><td><code>WhateverGreen.kext</code></td><td></td></tr><tr><td>Audio Recording<br>麦克风录音</td><td>✅</td><td><code>AppleALC.kext</code></td><td></td></tr><tr><td>Audio Playback Built-in speaker<br>通过 自带扬声器 播放音频</td><td>✅</td><td><code>AppleALC.kext</code></td><td></td></tr><tr><td>Audio Playback through 3.5mm<br>通过 3.5mm 接口播放音频</td><td>✅</td><td><code>AppleALC.kext</code></td><td></td></tr></tbody></table><h3 id="Power-Charge-Sleep-and-Hibernation-电源管理、充电、睡眠、休眠"><a href="#Power-Charge-Sleep-and-Hibernation-电源管理、充电、睡眠、休眠" class="headerlink" title="Power, Charge, Sleep and Hibernation / 电源管理、充电、睡眠、休眠"></a>Power, Charge, Sleep and Hibernation / 电源管理、充电、睡眠、休眠</h3><table><thead><tr><th>Feature</th><th>Status</th><th>Dependency</th><th>Remarks</th></tr></thead><tbody><tr><td>Battery Percentage Indication<br>电量百分比显示</td><td>✅</td><td><code>SSDT-BAT0</code></td><td></td></tr><tr><td>CPU Power Management (SpeedShift)<br>CPU 电源管理</td><td>✅</td><td><code>SSDT-PLUG</code></td><td>Use <code>MacBookPro14,3</code> for beter power management<br>使用 <code>MacBookPro14,3</code> 机型以获得更好的电源管理</td></tr><tr><td>NVMe Drive Battery Management<br>NVMe 硬盘电源管理</td><td>✅</td><td><code>NVMeFix.kext</code></td><td></td></tr><tr><td>S3 Sleep / Hibernation Mode 3<br>S3 睡眠 / Mode 3 休眠</td><td>✅</td><td></td><td></td></tr></tbody></table><h3 id="Input-amp-Output"><a href="#Input-amp-Output" class="headerlink" title="Input &amp; Output"></a>Input &amp; Output</h3><table><thead><tr><th>Feature</th><th>Status</th><th>Dependency</th><th>Remarks</th></tr></thead><tbody><tr><td>WiFi</td><td>✅</td><td><code>AirportFixup.kext</code></td><td>Suggest to switch Broadcom based card<br>推荐更换博通无线网卡</td></tr><tr><td>USB 2.0, USB 3.0</td><td>✅</td><td><code>USBPorts.kext</code></td><td></td></tr><tr><td>SD Card Reader</td><td>✅</td><td><code>Sinetek-rtsx.kext</code></td><td></td></tr><tr><td>USB Power Properties in macOS<br>macOS 的 USB 电源属性</td><td>✅</td><td><code>SSDT-EC-USBX</code></td><td></td></tr></tbody></table><h3 id="Display-TrackPad-and-Keyboard-显示器、触摸板和键盘"><a href="#Display-TrackPad-and-Keyboard-显示器、触摸板和键盘" class="headerlink" title="Display, TrackPad and Keyboard / 显示器、触摸板和键盘"></a>Display, TrackPad and Keyboard / 显示器、触摸板和键盘</h3><table><thead><tr><th>Feature</th><th>Status</th><th>Dependency</th><th>Remarks</th></tr></thead><tbody><tr><td>Brightness Adjustments<br>亮度调节</td><td>✅</td><td><code>WhateverGreen.kext</code>, <code>SSDT-PNLF</code>, <code>SSDT-BKey</code></td><td></td></tr><tr><td>HiDPI</td><td>✅</td><td></td><td>Natively enabled on HD screen external<br>在 HD 4K 外接屏幕上原生启用</td></tr><tr><td>TrackPad</td><td>✅</td><td><code>VoodooPS2.kext</code>,</td><td>All gesture avaliable<br>全部手势可用</td></tr><tr><td>Built-in Keyboard</td><td>✅</td><td></td><td>Native supported<br>内置键盘免驱</td></tr><tr><td>Fn Keys<br>Fn 功能键</td><td>✅</td><td></td><td>Native supported<br>内置键盘免驱</td></tr></tbody></table><h2 id="Refrence-必读参考资料"><a href="#Refrence-必读参考资料" class="headerlink" title="Refrence / 必读参考资料"></a>Refrence / 必读参考资料</h2><ul><li><a href="https://dortania.github.io/OpenCore-Install-Guide/">dortania’s OpenCore Install Guide</a></li><li><a href="https://dortania.github.io/OpenCore-Post-Install/">dortania’s OpenCore Post Install Guide</a></li><li><a href="https://dortania.github.io/OpenCore-Post-Install/">dortania Getting Started with ACPI</a></li><li><a href="https://github.com/dortania/OpenCore-Multiboot">dortania opencore multiboot</a></li><li><a href="https://github.com/acidanthera/WhateverGreen/blob/master/Manual/FAQ.IntelHD.en.md">WhateverGreen Intel HD Manual</a></li><li><code>Configuration.pdf</code> and <code>Differences.pdf</code> in each OpenCore releases.</li><li><a href="https://github.com/daliansky/OC-little">daliansky/OC-little</a></li><li><a href="https://oc.skk.moe/">OpenCore 简体中文参考手册 (非官方)</a></li></ul><p><strong>No seriously, PLEASE read those.</strong></p><p><strong>务必阅读上述参考资料</strong></p><h2 id="Requirement-需求和依赖"><a href="#Requirement-需求和依赖" class="headerlink" title="Requirement / 需求和依赖"></a>Requirement / 需求和依赖</h2><h3 id="Basic-基本需求"><a href="#Basic-基本需求" class="headerlink" title="Basic / 基本需求"></a>Basic / 基本需求</h3><ul><li>A macOS machine (optional): to create the macOS installer and build the EFI.<br>一台已经安装好 macOS 的机器，用于制作 macOS 安装器和编译本项目</li><li>Flash drive, 12GB or more, for the above purpose.<br>一个容量大于等于 12 GiB 的 U 盘</li><li><a href="https://github.com/ic005k/PlistEDPlus">PlistEDPlus</a> to edit plist files on Windows.<br>编辑 plist 文件的工具 <a href="https://github.com/ic005k/PlistEDPlus">PlistEDPlus</a></li><li><a href="https://github.com/acidanthera/MaciASL">MaciASL</a> for patching ACPI tables and editing ACPI patches.<br>用于修补和编辑 ACPI 的工具 <a href="https://github.com/acidanthera/MaciASL">MaciASL</a></li><li><a href="https://github.com/corpnewt/MountEFI">MountEFI</a> to quickly mount EFI partitions under macOS.<br>在 macOS 下挂载 EFI 分区的工具 <a href="https://github.com/corpnewt/MountEFI">MountEFI</a></li><li><a href="https://developer.apple.com/downloads">IORegistryExplorer</a> for diagnosis.<br>用于诊断的 <a href="https://developer.apple.com/downloads">IORegistryExplorer</a></li><li><a href="https://github.com/headkaze/Hackintool">HackinTool</a> for diagnosis ONLY. Most of the built-in patches are outdated.</li></ul><p><strong>仅用于</strong> 诊断的 <a href="https://github.com/headkaze/Hackintool">HackinTool</a>，大部分内置的补丁和工具已经过时、不再适用</p><ul><li>Patience and time, especially if this is your first time Hackintosh-ing.<br>耐心和时间。如果你是第一次进行黑苹果，这尤为重要</li></ul><h3 id="Hardware-Modification-硬件修改"><a href="#Hardware-Modification-硬件修改" class="headerlink" title="Hardware Modification / 硬件修改"></a>Hardware Modification / 硬件修改</h3><h4 id="SSD"><a href="#SSD" class="headerlink" title="SSD"></a>SSD</h4><p>Samusung PM981 is not supported AT ALL. Make sure to switch at least one SSD.</p><p>三星 PM981 <strong>完全</strong> 无法使用，务必更换至少一块 SSD 硬盘。</p><h4 id="Wireless-Card-无线网卡"><a href="#Wireless-Card-无线网卡" class="headerlink" title="Wireless Card / 无线网卡"></a>Wireless Card / 无线网卡</h4><p>The original Realtek can not be driven, it is recommended to use Broadcom wireless network card for the best experience (better, refer to the use of the best experience).</p><p>原装的 realtek 不可驱动，建议使用博通无线网卡以获得 <strong>更好</strong> 的体验（更好，指使用 <strong>体验</strong>）。</p><h3 id="Update-or-Downgrade-BIOS-Version-升级或降级-BIOS"><a href="#Update-or-Downgrade-BIOS-Version-升级或降级-BIOS" class="headerlink" title="Update or Downgrade BIOS Version / 升级或降级 BIOS"></a>Update or Downgrade BIOS Version / 升级或降级 BIOS</h3><p>It is recommended to use a specific version of the BIOS for the best use experience. By far the most recommended BIOS version is F19</p><p>Because of the old BIOS, the battery can not be a big lump of  <strong>dirty words deleted」</strong>.</p><p>推荐使用特定版本的 BIOS 以获得最佳的使用体验。目前为止，最推荐 BIOS 版本是 F19<br>因为老版的 BIOS 导致电池不可以 简直就是 <strong>一大坨「脏话删除」</strong>。</p><p><a href="https://support.hp.com/sg-en/drivers/selfservice/omen-by-hp-15-ce000-laptop-pc-series/15551437/model/16901084?sku=2EF97PA">Download BIOS at HP Support Website. 从惠普支持网站下载 BIOS。</a></p><h3 id="BIOS-Settings-修改-BIOS-设置"><a href="#BIOS-Settings-修改-BIOS-设置" class="headerlink" title="BIOS Settings / 修改 BIOS 设置"></a>BIOS Settings / 修改 BIOS 设置</h3><ul><li>Secure Boot: <code>DISABLED</code></li><li>Intel SGX Control: <code>DISABLED</code></li></ul><h2 id="Other-Information-其它信息"><a href="#Other-Information-其它信息" class="headerlink" title="Other Information / 其它信息"></a>Other Information / 其它信息</h2><h3 id="How-to-build-EFI-如何编译本-EFI"><a href="#How-to-build-EFI-如何编译本-EFI" class="headerlink" title="How to build EFI / 如何编译本 EFI"></a>How to build EFI / 如何编译本 EFI</h3><p>There is no prebuilt version of EFI avaliable YET, and it is only able to build under macOS. Use a virtual machine or <a href="https://github.com/mxschmitt/action-tmate">action-tmate</a> if you have to.</p><p>本 EFI <strong>暂时不提供</strong> 预编译版本，并且编译必须在 macOS 下进行。如有必要，请使用虚拟机、或通过 <a href="https://github.com/mxschmitt/action-tmate">action-tmate</a> 将 GitHub Action 作为 macOS VPS 使用。</p><p>Use following command to build the EFI.</p><p>使用下述指令编译 EFI：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git https://github.com/TokiharaSay/OpenCore-OMEN-by-HP-3-Hackintosh<br><span class="hljs-built_in">cd</span> OpenCore-OMEN-by-HP-3-Hackintosh<br>chmod +x **/*.sh<br>./build.sh<br></code></pre></td></tr></table></figure><p>Find generated EFI under <code>Output</code> folder. Find OpenCore config at <code>Output/EFI/OC/config_sample.plist</code> and fill in your own SMBIOS (Follow <a href="https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html">the guide</a>, use model <code>MacBookPro14,3</code>) then rename <code>config_sample.plist</code> to <code>config.plist</code>.</p><p>你可以在 <code>Output</code> 目录下找到生成的 EFI。OpenCore 配置文件路径为 <code>Output/EFI/OC/config_sample.plist</code>，你需要自行生成 SMBIOS 信息（遵循 <a href="https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html">这篇教程</a> 的步骤，使用机型 <code>MacBookPro14,3</code>）并填入配置文件中，然后将 <code>config_sample.plist</code> 重命名为 <code>config.plist</code>。</p><hr><p>Use following command to update and rebuild the EFI from upstream.</p><p>使用下述指令从上游更新和重新编译 EFI：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> OpenCore-OMEN-by-HP-3-Hackintosh<br>git pull --rebase<br>chmod +x **/*.sh<br>./build.sh<br></code></pre></td></tr></table></figure><p>Everytime you rebuilt the EFI you have to fill in the SMBIOS again. So keep your SMBIOS info saved in a safe place!</p><p>每次重新编译 EFI 后你都需要重新填入一次 SMBIOS 信息，所以务必将你的 SMBIOS 信息保存在一个安全的位置！</p><h3 id="Directories-Structure-项目目录结构"><a href="#Directories-Structure-项目目录结构" class="headerlink" title="Directories Structure / 项目目录结构"></a>Directories Structure / 项目目录结构</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">.<br>├── ACPI<br>│   ├── OEM_DSDT <span class="hljs-comment"># The original DSDT dissembled from OEM BIOS</span><br>│   └── SSDT<br>│       ├── DSL <span class="hljs-comment"># SSDT source dsl files</span><br>│       └── <span class="hljs-keyword">build_acpi.sh </span><span class="hljs-comment"># dsl files build script</span><br>├── <span class="hljs-built_in">Config</span><br>│   └── config_sample.plist <span class="hljs-comment"># Sample config.plist</span><br>├── Kexts<br>│   ├── Local <span class="hljs-comment"># Kexts files where there is no way to be downloaded</span><br>│   │   ├── ThunderboltReset.kext<br>│   │   ├── USBMap.kext<br>│   │   └── XHCI-unsupported.kext<br>│   └── download_kexts.<span class="hljs-keyword">sh </span><span class="hljs-comment"># Use the script to download the rest of the kexts</span><br>├── LICENSE<br>├── OpenCore<br>│   ├── OldSample.plist <span class="hljs-comment"># The curent version of OpenCore sample. Used to diff the configuration when update OpenCore to a newer version </span><br>│   └── oc.<span class="hljs-keyword">sh </span><span class="hljs-comment"># Script uesd to download OpenCorePkg and construct EFI folder</span><br>├── README.md <span class="hljs-comment"># The file you are currently reading</span><br>└── <span class="hljs-keyword">build.sh </span><span class="hljs-comment"># Overall build script, will call all the scripts mentioned above.</span><br></code></pre></td></tr></table></figure><h2 id="Donation-捐赠"><a href="#Donation-捐赠" class="headerlink" title="Donation / 捐赠"></a>Donation / 捐赠</h2><p>Donating to this project is OPTIONAL. But feel free to buy me a coffee if you appreciate my works.</p><p>捐赠本项目 <strong>并不是必需的</strong>。但是如果我的项目对你有所帮助，为什么不考虑一下给我买杯咖啡呢？</p><h2 id="Maintainer-维护者"><a href="#Maintainer-维护者" class="headerlink" title="Maintainer / 维护者"></a>Maintainer / 维护者</h2><p><strong>OMEN-by-HP-3 Hackintosh</strong> © <a href="https://github.com/TokiharaSay">TokiharaSay</a>, Released under the <a href="./LICENSE">GPL-3.0</a> License.<br><br>Authored and maintained by TokiharaSaywith help from contributors (<a href="https://github.com/TokiharaSay/OpenCore-OMEN-by-HP-3-Hackintosh/graphs/contributors">list</a>).</p><blockquote><p><a href="https://www.runebalot.cn/">Blog</a> · GitHub <a href="https://github.com/TokiharaSay">@TokiharaSay</a> · Telegram Channel <a href="https://t.me/TokiharaSay">@TokiharaSayChannel</a> · Twitter <a href="https://twitter.com/TokiharaSay">@TokiharaSay</a> </p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
