<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>解决网络唤醒Wi-Fi问题</title>
    <link href="/2021/04/03/Hackintosh_7/"/>
    <url>/2021/04/03/Hackintosh_7/</url>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>在开启网路唤醒的情况下, macOS在睡眠唤醒后, Wi-Fi变得非常慢, 具体表现为</p></blockquote><ul><li>ping 路由器的延迟高达 50ms~500ms<span id="more"></span><ul><li>ping 路由器的ip地址 -S Wi-Fi的ip地址</li></ul></li><li>Wi-Fi的速度非常慢, 低至 5Mbps<ul><li>局域网另外一台设备开 iperf3 服务, 本地用 <code>iperf3 -c iperf3服务器ip地址 -p 端口 -B Wi-Fi的ip地址</code> 测试</li></ul></li></ul><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><blockquote><p>在开启网络唤醒的情况下, macOS 睡眠后, 需要保持 Wi-Fi 的某种状态, 以便局域网的设备可以通过 Wi-Fi 唤醒 macOS. 但是在 macOS 唤醒后, 这种状态需要切换成 Wi-Fi on 的状态, 这个过程中, 某种未知原因导致 Wi-Fi 延迟和掉速</p></blockquote><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><blockquote><p>根据以上的原因的猜测, 一个很直接的解决思路就是睡眠前关闭 Wi-Fi, 唤醒后, 再打开 Wi-Fi</p></blockquote><blockquote><p>先手动测试一遍, 发现这个思路是可行的. 那么接下来就是如何自动实现</p></blockquote><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul><li><p>关闭 Wi-Fi 的命令 <code> networksetup -setairportpower en1 off</code>, 通常有线网络是 en0, Wi-Fi 是 en1, 查看具体名称, OPT+鼠标点击Wi-Fi图标, 获取到这个<code>网卡名称</code></p></li><li><p>打开 Wi-Fi 的命令 <code> networksetup -setairportpower en1 on</code></p></li><li><p>睡眠和唤醒自动执行脚本的程序, <a href="https://www.bernhard-baehr.de/">SleepWatcher</a></p></li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p>下载 SleepWatcher, <a href="https://www.bernhard-baehr.de/">官网</a>, <a href="sleepwatcher_2.2.1.tar">本文备份</a>, 并解压</p></li><li><p>删除讨厌的安全印记:</p> <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">xattr</span> -d -r com.apple.quarantine ~/Downloads/sleepwatcher_<span class="hljs-number">2</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span>/sleepwatcher<br></code></pre></td></tr></table></figure></li><li><p>复制 SleepWatcher 到可执行目录</p> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp -af ~<span class="hljs-regexp">/Downloads/</span>sleepwatcher_2.<span class="hljs-number">2.1</span><span class="hljs-regexp">/sleepwatcher /u</span>sr<span class="hljs-regexp">/local/</span>sbin/<br></code></pre></td></tr></table></figure></li><li><p>创建 .sleep 和 .wakeup 文件</p> <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">echo</span> &#x27;networksetup -setairportpower en1 off&#x27; &gt; ~<span class="hljs-string">/.sleep</span><br><span class="hljs-keyword">echo</span> &#x27;sleep 5&#x27; &gt; ~<span class="hljs-string">/.wakeup</span><br><span class="hljs-keyword">echo</span> &#x27;networksetup -setairportpower en1 on&#x27; &gt;&gt; ~<span class="hljs-string">/.wakeup</span><br><br>chmod +x ~<span class="hljs-string">/.sleep</span><br>chmod +x ~<span class="hljs-string">/.wakeup</span><br></code></pre></td></tr></table></figure></li><li><p>测试</p> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">- 终端执行下面的命令<br><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sbin/</span>sleepwatcher  -V -s ~<span class="hljs-regexp">/.sleep -w ~/</span>.wakeup<br>- 开启网络唤醒<br>- 将 macOS 睡眠<br>- 唤醒 macOS<br>- 测试 Wi-Fi 的 ping 和 iperf3, 前文所述<br></code></pre></td></tr></table></figure></li><li><p>开机启动</p> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp -af ~<span class="hljs-regexp">/Downloads/</span>sleepwatcher_2.<span class="hljs-number">2.1</span><span class="hljs-regexp">/config/</span>de.bernhard-baehr.sleepwatcher-<span class="hljs-number">20</span>compatibility-localuser.plist ~<span class="hljs-regexp">/Library/</span>LaunchAgents/<br><br>launchctl load -w ~<span class="hljs-regexp">/Library/</span>LaunchAgents/de.bernhard-baehr.sleepwatcher-<span class="hljs-number">20</span>compatibility-localuser.plist<br><br><span class="hljs-comment"># 查看是否运行成功</span><br>ps aux | grep sleepwatcher<br></code></pre></td></tr></table></figure><p>解决办法摘抄自：<br><a href="https://github.com/cattyhouse/oc-guide/blob/master/wifiwake.md">https://github.com/cattyhouse/oc-guide/blob/master/wifiwake.md</a></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一次我的NUC8i5BEH黑苹果完善程度</title>
    <link href="/2021/03/18/Hackintosh_5/"/>
    <url>/2021/03/18/Hackintosh_5/</url>
    
    <content type="html"><![CDATA[<p>运行macOS Intel-NUC8i5BEH</p><span id="more"></span><ul><li>若要引用或转载本EFI，请务必注明出处，所有内容仅供个人使用和学习参考，严禁用于商业用途（tb奸商先死ma）</li></ul><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><ul><li><a href="https://github.com/TokiharaSay/Intel-NUC8i5BEH-Hackintos">Github</a></li><li><a href="https://github.com/TokiharaSay/Intel-NUC8i5BEH-Hackintos/releases">EFI-releases</a></li></ul><table><thead><tr><th align="left">支持macOS版本</th><th>10.14.x-11.x</th></tr></thead><tbody><tr><td align="left">引导加载程序</td><td>OpenCore 0.6.8</td></tr><tr><td align="left">CPU平台</td><td>Coffee Lake（i5-8259U CPU）</td></tr></tbody></table><table><thead><tr><th align="left">系统配置</th><th align="center"></th><th align="center">注意事项</th></tr></thead><tbody><tr><td align="left">CPU</td><td align="center">i5-8259U</td><td align="center">XCPM工作，但不确定CPU调度是否正确</td></tr><tr><td align="left">图形</td><td align="center">Intel Iris Plus Graphics 655</td><td align="center">Type-C支持转接到DP/HDMI 以及HDMI正常</td></tr><tr><td align="left">BIOS</td><td align="center">087</td><td align="center">请看使用说明</td></tr><tr><td align="left">声音</td><td align="center">Realtek ALC235</td><td align="center">板载音频</td></tr><tr><td align="left">磁盘</td><td align="center">KIOXIA RC10 500G</td><td align="center">NVME插槽</td></tr><tr><td align="left">显示器</td><td align="center">3840x2160 15.6’</td><td align="center">TYPE-C支持DP1.2 我使用HDMI</td></tr><tr><td align="left">网卡</td><td align="center">Intel I219V6+BCM94360CS2+板载AC9560</td><td align="center">CS2需要硬改读卡器/不接NVME</td></tr></tbody></table><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li><strong>我是硬改读卡器不能用读卡器了，但是有提供驱动，有需求请编辑config.plist下的Kext-add下找到对应驱动把Enabled改成true/yes</strong></li><li><strong>Type-C的雷电不能用只能当全功能Type-C使用</strong></li><li><strong>默认使用Intel AC9560，使itlwm驱动而非AirportItlwm驱动，配置文件有写驱动路径有需求同读卡器驱动说明一样，（AirportItlwm自带为10.15x的驱动自行更换）</strong></li><li><strong>提供带有intel 蓝牙端口或不带有intel 蓝牙端口的USBPorts，同理读卡器驱动说明一样。</strong></li></ul><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><ul><li><p>BIOS设置</p><ul><li>Devices -&gt; USB -&gt; Port Device Charging Mode: off</li><li>Devices -&gt; USB -&gt; USB Legacy -&gt; Disabled</li><li>Security -&gt; Thunderbolt Security Level: Legacy Mode</li><li>Power -&gt; Wake on LAN from S4/S5: Stay Off</li><li>Boot -&gt; Boot Configuration -&gt; Network Boot: Disable</li><li>Boot -&gt; Secure Boot -&gt; Disable</li></ul></li><li><p>你需要自行生成 SMBIOS 信息（遵循 <a href="https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html">这篇教程</a> 的步骤，使用 <code>Macmini8,1</code>）并填入配置文件中。<br> SMBIOS的SystemUUID，双系统请在Win获取 在命令提示符下输入wmic 再输入csproduct 或 csproduct list full<br> SMBIOS的ROM，请填写网卡MAC地址。</p></li></ul><h3 id="系统相关"><a href="#系统相关" class="headerlink" title="系统相关"></a>系统相关</h3><ul><li>Windows 和 macOS 时间不同步<ul><li>Windows 中打开命令行，输入 Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</li><li>重启到 macOS，联网同步时间，再次进入 Windows 即可正常显示时间</li></ul></li></ul><h3 id="构建EFI方法"><a href="#构建EFI方法" class="headerlink" title="构建EFI方法"></a>构建EFI方法</h3><ul><li>使用以下命令来构建EFI<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/TokiharaSay/Intel-NUC8i5BEH-Hackintos<br><span class="hljs-built_in">cd</span> Intel-NUC8i5BEH-Hackintos<br>chmod +x **/*.sh<br>./build.sh<br></code></pre></td></tr></table></figure>你可以在 <code>Output</code> 目录下找到生成的 EFI。OpenCore 配置文件路径为 <code>Output/EFI/OC/config_sample.plist</code>，你需要自行生成 SMBIOS 信息（遵循 <a href="https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html">这篇教程</a> 的步骤，使用 <code>Macmini8,1</code>）并填入配置文件中，然后将 <code>config_sample.plist</code> 重命名为 <code>config.plist</code>。</li></ul><h3 id="感谢以下朋友的帮助"><a href="#感谢以下朋友的帮助" class="headerlink" title="感谢以下朋友的帮助"></a>感谢以下朋友的帮助</h3><ul><li><p>OpenCore技术交流群 群友们</p></li><li><p><a href="https://github.com/SukkaW">SukkaW</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hackintosh 实用教程与命令</title>
    <link href="/2021/03/18/Hackintosh_4/"/>
    <url>/2021/03/18/Hackintosh_4/</url>
    
    <content type="html"><![CDATA[<h3 id="教程链接"><a href="#教程链接" class="headerlink" title="教程链接"></a>教程链接</h3><p>英语配置教程<br><a href="https://dortania.github.io/OpenCore-Install-Guide/">https://dortania.github.io/OpenCore-Install-Guide/</a></p><span id="more"></span><p>OC文档翻译<br><a href="https://oc.skk.moe/">https://oc.skk.moe/</a><br>OC文档翻译<br><a href="https://blog.xjn819.com/post/opencore-guide.html">https://blog.xjn819.com/post/opencore-guide.html</a><br>OC ACPI 部件库<br><a href="https://ocbook.tlhub.cn/">https://ocbook.tlhub.cn/</a><br><a href="https://github.com/daliansky/OC-little">部件库文件</a><br>Mac/Win QtOpenCoreConfig 编辑工具<br><a href="https://github.com/ic005k/QtOpenCoreConfig">https://github.com/ic005k/QtOpenCoreConfig</a><br>Mac/Win plist编辑工具<br><a href="https://github.com/ic005k/PlistEDPlus">https://github.com/ic005k/PlistEDPlus</a><br>I2C触摸板<br><a href="https://blog.gzxiaobai.cn/">https://blog.gzxiaobai.cn/</a><br>电池<br><a href="https://blog.gzxiaobai.cn/">https://blog.gzxiaobai.cn/</a></p><h3 id="BIOS-推介设定"><a href="#BIOS-推介设定" class="headerlink" title="BIOS 推介设定"></a>BIOS 推介设定</h3><p>禁用</p><ul><li>FastBoot~快速启动</li><li>VT-d(can be enabled if you set DisableIoMapper to YES)<br>VT-d(如果DisableIOMapperQuick设置为YES,则可以启用)</li><li>CSM~CSM兼容性支持模块</li><li>Thunderbolt~雷雳</li><li>Intel SGX ~英特尔SGX</li><li>Intel Platform Trust ~英特尔平台信任</li><li>CFG Lock(MSR 0xE2 write protection) ~ CFG锁(MSR 0xE2写保护)<br>(必须关闭， 如果找不到该选项，则在OpenCore的config-内核-&gt; Quirks 下启用与CFG Lock相关选项)</li><li>Secure Boot ~安全启动</li><li>Parallel Port ~并口</li><li>Serial/COM Port ~串行/COM端口</li></ul><p>启用</p><ul><li>VT-x~VT-x</li><li>UEFI启动模式。请不要使用Legacy</li><li>硬盘模式改AHCI。不能用IDE和RST RAID</li><li>Above 4G decoding ~大于4G地址空间解码</li><li>Hyper-Threading ~超线程</li><li>xecute Disable Bit ~执行禁用位</li><li>EHCI/XHCI Hand-off ~ EHCI / XHCI接手控制</li><li>OS type: Windows 8.1/10 UEFI Mode ~操作系统类型: Windows 8.1 1 10 UEFI模式</li><li>DVMT Pre-Allocated(iGPU Memory): DVMT预分配(iGPU内存) : 64MB</li><li>Legacy RTC Device ~传统RTC设备</li></ul><h3 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h3><p>终端</p><ul><li><p>log show –last 1d | grep “AppleACPIPlatformPower” 查看睡眠唤醒日志</p></li><li><p>sudo spctl –-master-disable 允许任何未知来源 (master前面是两个-,MD渲染的博客只显一个)</p></li></ul><p>系统路径</p><ul><li>/System/Library/Extensions</li><li>/Library/Extensions</li></ul><p>重建缓存</p><ul><li>sudo kextcache -i /</li><li>sudo kextcache -u /</li><li>sudo kextcache -system-caches</li></ul><h3 id="Boot-Args"><a href="#Boot-Args" class="headerlink" title="Boot-Args"></a><a href="#Boot-Args" title="Boot-Args"></a>Boot-Args</h3><ul><li>agdpmod=vit9696 HDMI 开机黑屏</li><li>igfxonln=1 HDMI 唤醒黑屏</li><li>agdpmod=pikera 5000系列的AMD显卡使用（不加引导完成之后可能黑屏）</li><li>-wegnoegpu 软屏蔽独立显卡不会断电</li><li>keepsyms=1 推介与debug=0x100一起使用 可以打印更加详细的KP</li><li>debug=0x100 推介与keepsyms=1一起使用 可以打印更加详细的KP</li></ul><h3 id="不识别SATA盘"><a href="#不识别SATA盘" class="headerlink" title="不识别SATA盘"></a><a href="#%E4%B8%8D%E8%AF%86%E5%88%ABSATA%E7%9B%98" title="不识别SATA盘"></a>不识别SATA盘</h3><ul><li>BigSur不识别添加 CtlnaAHCIPort 驱动（如果是OC 同时请在config.plist里面的Kext-add下面添加该驱动列表）</li><li>Catalina及以下不识别SATA盘添加SATA-100-series-unsupported SATA-200-series-unsupported SATA-300-series-unsupported<br>三个驱动（如果是OC 同时请在config.plist里面的Kext-add下面添加该驱动列表）</li></ul><h3 id="OC选项"><a href="#OC选项" class="headerlink" title="OC选项"></a><a href="#OC%E9%80%89%E9%A1%B9" title="OC选项"></a>OC选项</h3><p>查看当前OC版本 终端输入</p><ul><li>nvram 4D1FDA02-38C7-4A6A-9CC6-4BCCA8B30102:opencore-version</li></ul><p>让Win不使用Mac的SMBIOS</p><ul><li>CustomSMBIOSGuid 改成 true （其实是打勾或者选Yes）</li><li>UpdateSMBIOSMode 填写 Custom</li></ul><p>打开保险箱</p><ul><li>AppleImageConversion 改成 true （其实是打勾或者选Yes）</li><li>FirmwareVolume 改成 true （其实是打勾或者选Yes）</li><li>HashServices 改成 true （其实是打勾或者选Yes）</li><li>AppleSmcIo 改成 true （其实是打勾或者选Yes）</li></ul><p>Big Sur 以下加载AirportItlwm 英特尔Wi-Fi驱动<br>方法一 (可能进不去Rec 模式)</p><ul><li>DmgLoading 设置为 Signed</li><li>SecureBootModel 设置为 Default</li></ul><p>方法二</p><ul><li>Kernel-Force-Item 1</li><li>BundlePath 填 System/Library/Extensions/IO80211Family.kext</li><li>Enabled 改成 true （其实是打勾或者选Yes）</li><li>ExecutablePath 填 Contents/MacOS/IO80211Family</li><li>MaxKernel 为空</li><li>MinKernel 为空</li><li>Identifier 填 com.apple.iokit.IO80211Family</li></ul><p>核显改为4095MB</p><ul><li>DeviceProperties-Add</li><li>PciRoot(0x0)/Pci(0x2,0x0)下添加</li><li>framebuffer-unifiedmem data 0000F0FF</li></ul>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Facetime与iMessage解决方法</title>
    <link href="/2021/03/13/Hackintosh_3/"/>
    <url>/2021/03/13/Hackintosh_3/</url>
    
    <content type="html"><![CDATA[<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>其实最开始我在 2020年4月15在酷安写过这篇文章，但是我发现有一些人是登陆提示是未知错误的，</p><span id="more"></span><p>而不是提示顾客代码，这次我为大家写个更详细的解决方法我不保证所有人都可以使用。<br>所需工具/链接我会在文章最后放出所有的下载链接<br>然后本文只供参考学习使用，不负任何责任。</p><h3 id="特殊情况"><a href="#特殊情况" class="headerlink" title="特殊情况"></a>特殊情况</h3><p>未知错误/闪提过于玄学 请尝试直接更换苹果账户不确定可行<br>或者找苹果解除风控</p><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p>首先请退出你所有的苹果账户然后确认你的引导是Clover还是OpenCore<br>打开<a href="https://github.com/headkaze/Hackintool">Hackintool</a><br>点击引导<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_1.png"><br>可以看见你的引导类型，我这里为OpenCore<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_2.png"><br>接下来我会分开说明的请左下选择按钮选择你应阅读的章节</p><h3 id="未知错误-顾客代码"><a href="#未知错误-顾客代码" class="headerlink" title="未知错误/顾客代码"></a>未知错误/顾客代码</h3><p>顾客代码则直接按照你引导选择章节过去阅读<br>如果是出错/未知错误的则继续看下去，目的是为了让你登陆时变成顾客代码<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_error1.jpg"><br>如果是英特尔Wi-Fi之类请先添加该驱动<a href="https://github.com/RehabMan/OS-X-Null-Ethernet">Null-Ethernet</a></p><p>然后打开终端输入命令<br>sudo rm -rf ~/Library/Preferences/SystemConfiguration/com.apple.network*<br>sudo rm -rf ~/Library/Preferences/SystemConfiguration/preferences*<br>sudo rm -rf ~/Library/Caches/com.apple.iCloudHelper*<br>sudo rm -rf ~/Library/Caches/com.apple.Messages*<br>sudo rm -rf ~/Library/Caches/com.apple.imfoundation.IMRemoteURLConnectionAgent*<br>sudo rm -rf ~/Library/Preferences/com.apple.iChat*<br>sudo rm -rf ~/Library/Preferences/com.apple.icloud*<br>sudo rm -rf ~/Library/Preferences/com.apple.imagent*<br>sudo rm -rf ~/Library/Preferences/com.apple.imessage*<br>sudo rm -rf ~/Library/Preferences/com.apple.imservice*<br>sudo rm -rf ~/Library/Preferences/com.apple.ids.service*<br>sudo rm -rf ~/Library/Preferences/com.apple.madrid.plist*<br>sudo rm -rf ~/Library/Preferences/com.apple.imessage.bag.plist*<br>sudo rm -rf ~/Library/Preferences/com.apple.identityserviced*<br>sudo rm -rf ~/Library/Preferences/com.apple.ids.service*<br>sudo rm -rf ~/Library/Preferences/com.apple.security*<br>sudo rm -rf ~/Library/Messages<br>然后到系统设置偏好-网络 删除所有设备 并重启然后按照你引导选择章节过去阅读<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_error2.png"></p><h3 id="OpenCore"><a href="#OpenCore" class="headerlink" title="OpenCore"></a>OpenCore</h3><p>首先在使用<a href="https://github.com/ic005k/PlistEDPlus">PlistEDPlus</a>打开你的Conifg.plist<br>然后打开<a href="https://github.com/headkaze/Hackintool">Hackintool</a><br>选择PCIE找到你的网卡并右键选择Copy Device Path<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_OpenCore_1.png"><br>然后回到<a href="https://github.com/ic005k/PlistEDPlus">PlistEDPlus</a> 你的Conifg.plist<br>DeviceProperties-Add下添加你的网卡地址，子项添加 built-in 数据类型为DATA类型 值为01<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_OpenCore_2.png"><br>然后打开<a href="https://github.com/corpnewt/GenSMBIOS">GenSMBIOS</a> 或者 <a href="https://mackie100projects.altervista.org/download-clover-configurator/">Clover Configurator</a> 刷ROM MLB 序列号 SystemUUID ROM在变量设置里生成即可 序列号需要在<a href="https://checkcoverage.apple.com/">苹果官方</a> 查得到设备，太老了就拿新款机器去刷 刷到之后 填写到Conifg.plist的机型里<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_OpenCore_3.png"><br>当然UUID最好获取Win的 Win获取 在命令提示符下输入wmic 再输入csproduct 或 csproduct list full<br>重启选择清理nvram 然后跳转开始解决</p><h3 id="Clover"><a href="#Clover" class="headerlink" title="Clover"></a>Clover</h3><p>Clover直接用 <a href="https://mackie100projects.altervista.org/download-clover-configurator/">Clover Configurator</a> 打开你的Conifg.plist然后打开选择PCIE找到你的网卡并右键选择Copy Device Path<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_OpenCore_1.png"><br>设备设置-属性左下框点+粘贴Device地址 右下框点+ 添加 built-in 数据类型为DATA类型 值为01<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_Clover_1.png.png"><br>然后机型设置 刷ROM MLB 序列号 SystemUUID ROM在变量设置里生成即可 序列号需要在<a href="https://checkcoverage.apple.com/">苹果官方</a> 查得到设备，太老了就拿新款机器去刷 刷到之后保存，重启在Clover界面按F11<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_OpenCore_3.png"></p><h3 id="开始解决"><a href="#开始解决" class="headerlink" title="开始解决"></a>开始解决</h3><p>如果按上面操作依然是未知错误的请尝试直接更换苹果账户/放弃<br>一般来说做好上面的操作之后登陆会提示为顾客代码<br><img src="https://cdn.jsdelivr.net/gh/TokiharaSay/Pic/Facetime_iMessage/FacetimeoriMessage_END_1.png"><br>这时应该直接打苹果官方电话寻求解决么，跟客服说你的Facetime与iMessage无法使用，不要暴露你说黑果，前面刷的刷有效序列号，是顾客代码 所以不要怕第一次电话没解决就第二次 实测可行</p><p>Hackintool <a href="https://github.com/headkaze/Hackintool">https://github.com/headkaze/Hackintool</a><br>Clover Configurator <a href="https://mackie100projects.altervista.org/download-clover-configurator/">https://mackie100projects.altervista.org/download-clover-configurator/</a><br>PlistEDPlus <a href="https://github.com/ic005k/PlistEDPlus">https://github.com/ic005k/PlistEDPlus</a><br>Null-Ethernet <a href="https://github.com/RehabMan/OS-X-Null-Ethernet">https://github.com/RehabMan/OS-X-Null-Ethernet</a></p>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一次OMEN-by-HP-3黑苹果完善程度</title>
    <link href="/2021/03/01/Hackintosh_1/"/>
    <url>/2021/03/01/Hackintosh_1/</url>
    
    <content type="html"><![CDATA[<p>运行macOS-OMEN-by-HP-3</p><span id="more"></span><ul><li>若要引用或转载本EFI，请务必注明出处，所有内容仅供个人使用和学习参考，严禁用于商业用途（tb奸商先死ma）</li></ul><table><thead><tr><th align="left">支持macOS版本</th><th>10.13.6-11.2</th></tr></thead><tbody><tr><td align="left">引导加载程序</td><td>OpenCore 0.6.7</td></tr><tr><td align="left">CPU平台</td><td>Kaby Lake（i5-7300HQ）</td></tr></tbody></table><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><ul><li><a href="https://github.com/TokiharaSay/OMEN-by-HP-3-Hackintosh">https://github.com/TokiharaSay/OMEN-by-HP-3-Hackintosh</a></li></ul><table><thead><tr><th align="left">系统配置</th><th align="center"></th><th align="center">注意事项</th></tr></thead><tbody><tr><td align="left">CPU</td><td align="center">i5-7300HQ</td><td align="center">XCPM工作，但不确定CPU调度是否正确</td></tr><tr><td align="left">图形</td><td align="center">Intel HD630</td><td align="center">Type-C支持传输到DP/HDMI</td></tr><tr><td align="left">BIOS</td><td align="center">F.23</td><td align="center">关闭安全引导</td></tr><tr><td align="left">声音</td><td align="center">Realtek ALC295</td><td align="center">板载音频</td></tr><tr><td align="left">磁盘</td><td align="center">SKintech 128G M.2 SATA</td><td align="center">NVME插槽</td></tr><tr><td align="left">显示器</td><td align="center">内置1920x1080 15.6’+外部3840x2160 15.6’</td><td align="center">TYPE-C支持DP1.2</td></tr><tr><td align="left">电池</td><td align="center">正常显示状态</td><td align="center">不会无法插电源才可以开机</td></tr><tr><td align="left">网卡</td><td align="center">Realtek RTL8111H+BCM94360CS2</td><td align="center">暂时替换原来的Realtek WIFI</td></tr></tbody></table><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li><strong>PS2触摸板的实体按钮不可用 （已解决）VoodooPS2Controller 源码中将 isthinkpad 设置为1</strong></li><li><strong>独立图形卡GTX1050Ti不可用</strong></li></ul><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><ul><li><p>仓库增加appleALC驱动 定制好了三个麦克风一个耳机一个内置扬声器 使用的ID为66（麦克风需要手动切换）</p></li><li><p>使用 <a href="https://github.com/corpnewt/GenSMBIOS">GenSMBIOS</a>生成 MLB SystemSerialNumber</p></li><li><p>SystemUUID请在Win获取 在命令提示符下输入wmic 再输入csproduct 或 csproduct list full</p></li><li><p>使用以下命令来构建EFI</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/TokiharaSay/OMEN-by-HP-3-Hackintosh<br><span class="hljs-built_in">cd</span> OMEN-by-HP-3-Hackintosh/Auto<br>chmod +x **/*.sh<br>./build.sh<br></code></pre></td></tr></table></figure><p>你可以在 <code>Output</code> 目录下找到生成的 EFI。OpenCore 配置文件路径为 <code>Output/EFI/OC/config_sample.plist</code>，你需要自行生成 SMBIOS 信息（遵循 <a href="https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html">这篇教程</a> 的步骤，使用 <code>你需要的机型</code>）并填入配置文件中，然后将 <code>config_sample.plist</code> 重命名为 <code>config.plist</code>。</p></li></ul><h3 id="感谢以下朋友的帮助"><a href="#感谢以下朋友的帮助" class="headerlink" title="感谢以下朋友的帮助"></a>感谢以下朋友的帮助</h3><ul><li><p><a href="https://github.com/XStar-Dev">XStarDev</a></p></li><li><p>OC技术交流群 百科哞</p></li><li><p><a href="https://github.com/SukkaW">SukkaW</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一次微星-B360M-迫击炮黑苹果完善程度</title>
    <link href="/2021/03/01/Hackintosh_2/"/>
    <url>/2021/03/01/Hackintosh_2/</url>
    
    <content type="html"><![CDATA[<p>运行macOS MSI-B360M-MORTAR</p><span id="more"></span><ul><li>若要引用或转载本EFI，请务必注明出处，所有内容仅供个人使用和学习参考，严禁用于商业用途（tb奸商先死ma）</li></ul><table><thead><tr><th align="left">支持macOS版本</th><th>10.14.6-11.2</th></tr></thead><tbody><tr><td align="left">引导加载程序</td><td>OpenCore 0.6.7</td></tr><tr><td align="left">CPU平台</td><td>Coffee Lake（i5-8400）</td></tr></tbody></table><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><ul><li><a href="https://github.com/TokiharaSay/MSI-B360M-MORTAR-Hackintosh">https://github.com/TokiharaSay/MSI-B360M-MORTAR-Hackintosh</a></li></ul><table><thead><tr><th align="left">系统配置</th><th align="center"></th><th align="center">注意事项</th></tr></thead><tbody><tr><td align="left">CPU</td><td align="center">i5-8400</td><td align="center">XCPM工作，但不确定CPU调度是否正确</td></tr><tr><td align="left">显卡</td><td align="center">Intel UHD630/GTX980Ti</td><td align="center">使用两根DP线解决WIN/MAC 切换系统显卡使用问题</td></tr><tr><td align="left">BIOS</td><td align="center">7B23v1B</td><td align="center">解锁CFG锁</td></tr><tr><td align="left">声音</td><td align="center">Realtek ALC892</td><td align="center">板载音频</td></tr><tr><td align="left">硬盘</td><td align="center">三星970 Evo 250G</td><td align="center">第一个NVME插槽</td></tr><tr><td align="left">显示器</td><td align="center">3840x2160 15.6’</td><td align="center">通过DP连接</td></tr></tbody></table><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li><strong>未找到</strong></li></ul><p>感谢OC技术交流群 百科哞帮助修改AppleALC，将前面板耳机与后面板扬声器分开</p><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><ul><li><p>BIOS设置</p><ul><li>SETTINGS -&gt; 高级 -&gt; 集成显卡多显示器: 允许</li><li>SETTINGS -&gt; 高级 -&gt; ErP Ready: 允许</li><li>SETTINGS -&gt; 高级 -&gt; Windows操作系统的配置 -&gt; 安全引导 -&gt; MSI 快速开机: 关闭</li><li>SETTINGS -&gt; 高级 -&gt; Windows操作系统的配置 -&gt; 安全引导 -&gt; 快速开机: 关闭</li><li>SETTINGS -&gt; 高级 -&gt; Windows操作系统的配置 -&gt; 安全引导 -&gt; 安全启动: 关闭</li><li>SETTINGS -&gt; 高级 -&gt; 唤醒事件设置 -&gt; USB设备从S3/S4/S5唤醒: 允许</li><li>OC -&gt; CPU特征 -&gt; CFG锁定: 禁止</li><li>SETTINGS -&gt; 启动 -&gt; 启动模式选择: UEFI</li><li>安装替换引导到硬盘之后<ul><li>SETTINGS -&gt; 启动 -&gt; UEFI硬盘BBS优先权 -&gt; 启动选项#1 -&gt; 选择你Mac启动项为首位</li></ul></li></ul></li><li><p>使用 <a href="https://github.com/corpnewt/GenSMBIOS">GenSMBIOS</a>生成 MLB SystemSerialNumber</p></li><li><p>SystemUUID请在Win获取 在命令提示符下输入wmic 再输入csproduct 或 csproduct list full</p></li><li><p>默认的config.plist文件只有IGPU</p></li><li><p>有IGPU+AMD GPU要求，请删除默认配置文件并将配置config_AMD+IGPU.iMac19.1.plist 重命名为config.plist</p></li><li><p>没有IGPU 但是有AMD GPU，请删除默认配置文件并将配置config_ONLY.AMD.GPU.iMacPro1.1.plist重命名为config.plist</p></li></ul><p>使用以下命令来构建EFI</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/TokiharaSay/MSI-B360M-MORTAR-Hackintosh<br><span class="hljs-built_in">cd</span> MSI-B360M-MORTAR-Hackintosh/Auto<br>chmod +x **/*.sh<br>./build.sh<br></code></pre></td></tr></table></figure><p>你可以在 <code>Output</code> 目录下找到生成的 EFI。OpenCore 配置文件路径为 <code>Output/EFI/OC/config_sample.plist</code>，你需要自行生成 SMBIOS 信息（遵循 <a href="https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html">这篇教程</a> 的步骤，使用 <code>你需要的机型</code>）并填入配置文件中，然后将 <code>config_sample.plist</code> 重命名为 <code>config.plist</code>。</p><ul><li><p>默认的config_sample.plist文件只有IGPU</p></li><li><p>有IGPU+AMD GPU要求，请删除默认配置文件并将配置config_AMD+IGPU.iMac19.1.plist 重命名为config.plist</p></li><li><p>没有IGPU 但是有AMD GPU，请删除默认配置文件并将配置config_ONLY.AMD.GPU.iMacPro1.1.plist重命名为config.plist</p></li></ul><h3 id="感谢以下朋友的帮助"><a href="#感谢以下朋友的帮助" class="headerlink" title="感谢以下朋友的帮助"></a>感谢以下朋友的帮助</h3><ul><li><p>OC技术交流群 百科哞</p></li><li><p><a href="https://github.com/SukkaW">SukkaW</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Hackintosh</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hackintosh</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
